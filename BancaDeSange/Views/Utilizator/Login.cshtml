@model BancaDeSange.Models.Utilizatori

@{
    ViewBag.Title = "Login";
    Session["UserID"] = Guid.NewGuid();
}

<h2>Login</h2>


@using (Html.BeginForm(("Login", "Utilizator", FormMethod.Post))) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Utilizatori</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NumeUtilizator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeUtilizator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeUtilizator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Parola, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parola, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parola, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipDeUtilizator, htmlAttributes: new { @class = "control-label col-md-2" })
            @{ List<SelectListItem> lista = new List<SelectListItem>();

                lista.Add(new SelectListItem
                {
                    Text = "Doneaza",
                    Value = "Doneaza"


                });
                lista.Add(new SelectListItem
                {
                    Text = "Cere",
                    Value = "Cere"


                });
                ViewData["TipDeutilizator"] = lista;

            }

            <div class="col-md-10">
                @Html.DropDownList("TipDeutilizator", ViewData["TipDeUtilizator"] as List<SelectListItem>)



                @Html.ValidationMessageFor(model => model.TipDeUtilizator, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Logheaza-te" class="btn btn-default" />
            </div>
        </div>

        


    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
